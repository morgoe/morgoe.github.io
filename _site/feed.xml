<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Morgan Carter — Product Designer</title>
    <description>I’m a product designer based in Sydney. I turn complex ideas into intuitive, beautiful products.</description>
    <link>http://morgancarter.com.au/</link>
    <atom:link href="http://morgancarter.com.au/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 23 Sep 2015 10:43:00 +0300</pubDate>
    <lastBuildDate>Wed, 23 Sep 2015 10:43:00 +0300</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Which Input When?</title>
        <description>&lt;h3 id=&quot;input-fields&quot;&gt;Input Fields&lt;/h3&gt;

&lt;p&gt;The input field is the bread and butter of forms. They’re used for anything that requires custom input from a user, not a selection of predefined options. Usernames, emails, addresses, passwords, websites, phone numbers.&lt;/p&gt;

&lt;p&gt;Make sure you use the correct [HTML5 input] when using input fields. They fall back gracefully on old browsers, and on new browsers (particularly mobile), they’re great for helping users to enter in the correct type of information.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/which-input-when/keyboards-2.png&quot; alt=&quot;input-fields&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;input-fields&lt;/figcaption&gt;

&lt;h3 id=&quot;radio-buttons&quot;&gt;Radio Buttons&lt;/h3&gt;
&lt;p&gt;Radio buttons are used when a user must select one option out of a few. Once selected, they can’t be unselected - so never use a radio button for an optional input.&lt;/p&gt;

&lt;p&gt;Radio buttons are ideal when you have a small amount of options, about 4 or 5. Smaller than that, you’re better off with button groups. Larger, and you’re better off with a select dropdown. You may also use a radio button when you’ve only got a few options when you need long labels that won’t fit in button groups.&lt;/p&gt;

&lt;p&gt;Radio buttons traditionally look like circles, as opposed to checkboxes looking like squares. Feel free to implement your own styling, but keep the shapes roughly the same or you’ll confuse your users.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/which-input-when/radio-buttons.png&quot; alt=&quot;radio-buttons&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;radio-buttons&lt;/figcaption&gt;

&lt;h3 id=&quot;button-groups&quot;&gt;Button Groups&lt;/h3&gt;

&lt;p&gt;These are essentially radio buttons, but they’re a little more intuitive, as they afford* the buttons we use on a radio in real life better than traditional web radio buttons. They’re great for when you only have 2 or 3 options to choose from, all with short one-word labels.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/which-input-when/button-groups.png&quot; alt=&quot;button-groups&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;button-groups&lt;/figcaption&gt;

&lt;h3 id=&quot;checkboxes&quot;&gt;Checkboxes&lt;/h3&gt;

&lt;p&gt;Checkboxes are similar to radio buttons, but with more flexibility. They can be used to answer a single question with ‘yes’ or ‘no’. They can also be used to answer a single question with many answers, or one answer, or no answer at all.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/which-input-when/checkboxes.png&quot; alt=&quot;checkboxes&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;checkboxes&lt;/figcaption&gt;

&lt;h3 id=&quot;toggles&quot;&gt;Toggles&lt;/h3&gt;

&lt;p&gt;Toggles are to checkboxes what button groups are to radio buttons. They’re essentially the same input, but they mimic what we use in real life better. They’re also a bit easier at a glance to understand, as they’re coloured, and always positive. 
A ticked checkbox may sometimes mean ‘disabled’, but a green toggle always means ‘enabled’.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/which-input-when/toggles.png&quot; alt=&quot;toggles&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;toggles&lt;/figcaption&gt;

&lt;h3 id=&quot;range-sliders&quot;&gt;Range sliders&lt;/h3&gt;

&lt;p&gt;Range sliders are good when you need the user to enter a number within a minimum or maximum limit. They’re also good when you want the user to &lt;em&gt;set&lt;/em&gt; the minimum or maximum limit. Range sliders are not precise - you should only use them when “close enough is good enough”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/which-input-when/range-sliders.png&quot; alt=&quot;range-sliders&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;range-sliders&lt;/figcaption&gt;

&lt;h3 id=&quot;updown-toggles&quot;&gt;Up/down toggles&lt;/h3&gt;

&lt;p&gt;These are a quick and easy way to let users manipulate a number. They’re only useful if the user will be deviating from the default setting by 2 or 3 digits. Any more than that, and this will be much more cumbersome than a simple input field, or even select dropdown.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/which-input-when/up-downs.png&quot; alt=&quot;up-downs&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;up-downs&lt;/figcaption&gt;

&lt;h3 id=&quot;buttons-and-links&quot;&gt;Buttons and Links&lt;/h3&gt;

&lt;p&gt;Buttons do actions, whereas links navigate you somewhere. Due to flat design, and the rising complexity of software, where navigation and action-doing often converge, buttons and links are often used interchangeably.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/which-input-when/buttons-links.png&quot; alt=&quot;buttons-links&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;buttons-links&lt;/figcaption&gt;

</description>
        <pubDate>Mon, 05 Oct 2015 00:00:00 +0300</pubDate>
        <link>http://morgancarter.com.au/coming-soon/which-input-when</link>
        <guid isPermaLink="true">http://morgancarter.com.au/coming-soon/which-input-when</guid>
        
        
        <category>coming-soon</category>
        
      </item>
    
      <item>
        <title>Affordance (for Overflowing Content)</title>
        <description>&lt;p&gt;When we observe how users interact with our designs, we’re often surprised by their behaviour. They don’t seem to understand aspects of the design that are obvious to us, and react in ways that we could never predict.&lt;/p&gt;

&lt;p&gt;When we design, we have a clear mental model of the layout in our minds. We see not just the 2D pixels that are visible on-screen, but where each element is positioned in virtual 3D space. However, when our designs don’t convey this virtual layout well, our users get confused and act in ways we don’t expect - because they’re acting on less information than we are.&lt;/p&gt;

&lt;p&gt;An intuitive design relays all necessary information to the user, in ways they already understand. The way we do this is through &lt;strong&gt;affordance&lt;/strong&gt;. In case you’re not familiar with the term, affordance refers to the properties of something that intuitively imply its functionality. For example, a physical button is raised and separated from its surface, suggesting that it can be pushed. Skeuomorphism, which has received a bad rap lately, allows us to borrow affordances from real-life - a digital button might borrow this affordance by having a gradient, or a shadow underneath.&lt;/p&gt;

&lt;p&gt;For a real life example of affordance, have a look at the photo below. The fact that they have to label how to use a door means that it’s not a good design. The bars on the ‘push’ side of the door provide a misleading affordance to pull - you need a handle to pull, but a handle is useless when pushing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/scrolling-affordance/door-affordance.jpg&quot; alt=&quot;door affordance&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;Sourced from &lt;a href=&quot;http://finalmile.in/behaviourarchitecture/affordances-designing-for-action&quot;&gt;Affordances: Designing for action&lt;/a&gt;.&lt;/figcaption&gt;

&lt;p&gt;When I was designing &lt;a href=&quot;/work/deputy-3/&quot;&gt;Deputy 3&lt;/a&gt;, our previous interface had some very long forms, and many of our users were using tiny laptops or iPads. This meant that they would see a few form fields on the screen, and would have to scroll to see the rest, and to see the “Save” button at the bottom.&lt;/p&gt;

&lt;p&gt;We at Deputy knew the form was long, and where the buttons were placed, and so we never had any issues internally. But we got constant customer support calls from users not seeing the “Save” button, and getting frustrated at not being able to save their forms. Our design wasn’t intuitive because the form had no affordance that encouraged the user to scroll. Let’s run through a few ways to provide that affordance.&lt;/p&gt;

&lt;h3 id=&quot;the-scrollbar&quot;&gt;The scrollbar&lt;/h3&gt;
&lt;p&gt;The scrollbar was a fantastic design concept. It let you:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;know when you could or couldn’t scroll&lt;/li&gt;
  &lt;li&gt;know how long the content was&lt;/li&gt;
  &lt;li&gt;know how far through the content you were&lt;/li&gt;
  &lt;li&gt;navigate through the content much faster than scrubbing the mouse-wheel&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I say was, because in the relentless pursuit of minimalism, it’s been reduced to a shell of its former self. Now, on many devices, it’s completely hidden until you scroll. So if someone views your website on a Mac, or any mobile device, you can’t rely on this affordance to encourage them to scroll.&lt;/p&gt;

&lt;h3 id=&quot;cut-off-content&quot;&gt;Cut-off content&lt;/h3&gt;
&lt;p&gt;This is, in my opinion, the best way to indicate scrolling. It’s very intuitive, and doesn’t take up any space, so it’s great for user interfaces. Take a look at the following two examples:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/scrolling-affordance/ipad-vs-iphone.png&quot; alt=&quot;image of iPad / iPhone&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;Sourced from Apple &lt;a href=&quot;http://www.apple.com/iphone-6/&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://www.apple.com/ipad-air-2/&quot;&gt;here&lt;/a&gt;.&lt;/figcaption&gt;

&lt;p&gt;The example on the left is completely contained within the screen, with nothing that encourages you to scroll. But the example on the right clearly has more content below the fold. And it was intentionally designed this way - resizing your browser always keeps just the top half of the sentence visible - &lt;a href=&quot;http://www.apple.com/ipad-air-2/&quot;&gt;check it out&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you’re wondering how to do this, the simplest way is to use &lt;code&gt;vh&lt;/code&gt; units - an area with &lt;code&gt;90vh&lt;/code&gt; will always take up 90% of the browser’s height, so you’ll always have that bottom 10% visible.&lt;/p&gt;

&lt;h3 id=&quot;a-scroll-me-icon-or-button&quot;&gt;A ‘scroll me’ icon or button&lt;/h3&gt;
&lt;p&gt;You might have noticed a trend lately with websites telling you, quite literally, to scroll your mouse. A page that’s fully contained within the screen looks great, and lets us achieve a more editorial design, but needs to have this alternative scrolling affordance.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/scrolling-affordance/mouse-scroll.jpg&quot; alt=&quot;image with scroll mouse&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;It still shows a mouse icon when you visit on a tablet unfortunately. &lt;a href=&quot;http://www.heartkids.co.nz/&quot;&gt;Sourced from Heart Kids New Zealand&lt;/a&gt;.&lt;/figcaption&gt;

&lt;p&gt;This is a perfectly fine solution, but it has a very limited use. They’re not much use in tight user interfaces with little space to spare. And even on full-page sites, they don’t work well if they’re not the primary action, like the website below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/scrolling-affordance/minimal-indicator.png&quot; alt=&quot;image of NOD&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;Did you notice the sideways text on the left telling you to scroll? &lt;a href=&quot;http://yougotthenod.com/&quot;&gt;Sourced from NOD&lt;/a&gt;.&lt;/figcaption&gt;

&lt;h3 id=&quot;shadows-and-gradients&quot;&gt;Shadows and gradients&lt;/h3&gt;
&lt;p&gt;What if we have a user interface for a web application that’s accessible on anything from desktops to mobile phones? We can’t rely on the scrollbar, there’s no space for an icon saying “scroll!”, and our design is necessarily responsive. It’s easy to ensure that your content gets cut off mid-way when you’re designing for a set screen size, but responsive design means you have no control over screen size.&lt;/p&gt;

&lt;p&gt;Let’s go back to the problem I was working on for Deputy 3. The first thing I did was separate the buttons, and place them in a footer that always sat on top of the form. No more were users confused as to how to save their form, at some screen sizes the form fields would be cut off mid-way, providing a clear affordance for users to scroll to see the rest of the form. But not always. And there was nothing I could do about this - fixing it on one screen size would break it on another.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/scrolling-affordance/deputy-forms.png&quot; alt=&quot;no-affordance image&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;
	You can understand why people couldn't find the Submit button on the left. It's better on the right, but it looks like the form only has 3 fields, because the screen size happens to be so it doesn't cut any content off mid-way.
&lt;/figcaption&gt;

&lt;p&gt;Remember at the beginning, when I said that we can show that a button is &lt;em&gt;above&lt;/em&gt; the surrounding content by using shadows and gradients? Here our header and footer are &lt;em&gt;above&lt;/em&gt; the form, so we can use the same solution. And to make it even clearer, let’s make it so that when you reach the top or end of the form, and there’s no more content sitting ‘underneath’, the shadow disappears.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/scrolling-affordance/material-design.gif&quot; alt=&quot;image from Google Inbox or something similar&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;&lt;a href=&quot;https://dribbble.com/shots/2238573-Google-I-O-App-Layer-Visualization&quot;&gt;Google I/O App Layer Visualization&lt;/a&gt; by Roman Nurik.&lt;/figcaption&gt;

&lt;p&gt;There’s lots of implementations of this solution on the web, but they all use JavaScript. This means that for each scroll event, the browser needs to do a bunch of maths to calculate whether you’re at the top of the list or not, which is very expensive. So let’s do it with CSS.&lt;/p&gt;

&lt;p data-height=&quot;450&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;rVepxe&quot; data-default-tab=&quot;result&quot; data-user=&quot;morgoe&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/morgoe/pen/rVepxe/&quot;&gt;Affordance for Overflowing Content&lt;/a&gt; by Morgan Carter (&lt;a href=&quot;http://codepen.io/morgoe&quot;&gt;@morgoe&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;figcaption&gt;If you're not aware - I'm hosting all my code snippets on CodePen. This means you can go in and see my raw code, to try and better understand what I'm doing. Click the Edit on Codepen button on the top right.&lt;/figcaption&gt;

&lt;p&gt;The way this works is by having two gradients for each shadow. The dark gradient is always visible just below the header, and above the footer. And at the top and bottom of the list, there’s two white gradients, positioned higher than the dark gradients in z-space. So as these overlap, the white gradient slowly covers the dark gradient. Also, unlike the binary on/off JavaScript solutions, it’s a gradual change - try scrolling slowly to see what I mean.&lt;/p&gt;

&lt;p&gt;Affordance is a concept you can apply to all of your designs. A design becomes intuitive because of affordance, because the user already knows how to interact with it. You don’t need to put labels everywhere explaining how to use your design. Which is good, because they wouldn’t read it anyway.&lt;/p&gt;

</description>
        <pubDate>Wed, 23 Sep 2015 00:00:00 +0300</pubDate>
        <link>http://morgancarter.com.au/design-solutions/affordance-for-overflowing-content</link>
        <guid isPermaLink="true">http://morgancarter.com.au/design-solutions/affordance-for-overflowing-content</guid>
        
        
        <category>design-solutions</category>
        
      </item>
    
      <item>
        <title>Encouraging Users to Upload Photos</title>
        <description>&lt;p&gt;In the last post, we covered how to create beautiful &lt;a href=&quot;/design-solutions/placeholder-avatars/&quot;&gt;placeholder avatars&lt;/a&gt;. Now let’s focus on the other half of the problem - encouraging our users to actually upload a display photo.&lt;/p&gt;

&lt;h3 id=&quot;reasons-and-rewards&quot;&gt;Reasons and rewards&lt;/h3&gt;

&lt;p&gt;Whenever you’re asking something of a user, it’s always helpful to give them a reason (why the user should give the data) and a reward (what benefits it will bring the user).&lt;/p&gt;

&lt;p&gt;On social networks like Facebook or LinkedIn, almost everyone uploads a display photo. It’s no wonder they don’t bother having nice placeholder avatars.&lt;/p&gt;

&lt;p&gt;A display photo on Facebook is a way for users to express themselves, and users are rewarded for uploading a display photo with likes and comments from other users - social validation.&lt;/p&gt;

&lt;div style=&quot;background: #d1eefc;&quot;&gt;
	&lt;img src=&quot;/assets/images/blog/encouraging-upload/isabelfoo-socialmedia.png&quot; width=&quot;400&quot; /&gt;
&lt;/div&gt;
&lt;figcaption&gt;&lt;a href=&quot;https://dribbble.com/shots/1683533-Social-Media&quot;&gt;Social Media&lt;/a&gt; by Isabel Foo.&lt;/figcaption&gt;

&lt;p&gt;A display photo on LinkedIn is important for users to identify themselves to potential connections, and to project a certain image. Users are rewarded when uploading a display photo, again with likes, but more importantly, exposure to potential business relationships.&lt;/p&gt;

&lt;p&gt;Reasons and rewards don’t need to be so complex. Even a bit of supporting text (eg. &lt;em&gt;“Adding a photo helps your friends identify you.”&lt;/em&gt;) goes a long way.&lt;/p&gt;

&lt;h3 id=&quot;use-their-existing-social-display-photos&quot;&gt;Use their existing social display photos&lt;/h3&gt;

&lt;p&gt;You can take advantage of the work the social media giants have done by simply grabbing the display photo from one of the user’s social networks. Many products now offer social logins, or allow you to connect your social networks after creating an account. If this suits your product, it’s a really simple way to practically guarantee getting a display photo for every user.&lt;/p&gt;

&lt;p&gt;Learn how to do this for &lt;a href=&quot;https://developers.facebook.com/docs/graph-api/reference/v2.4/user/picture&quot;&gt;Facebook&lt;/a&gt; and &lt;a href=&quot;https://dev.twitter.com/overview/general/user-profile-images-and-banners&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;make-it-part-of-onboarding&quot;&gt;Make it part of onboarding&lt;/h3&gt;

&lt;p&gt;A number of products include this as a step in the onboarding process, often making it difficult to skip or hard to ignore.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/encouraging-upload/okcupid.png&quot; alt=&quot;OKCupid Onboarding&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;OKCupid makes adding a display photo hard to ignore. It would probably help to also add some supporting copy, like &quot;profiles with photos get XX% more views&quot;.&lt;/figcaption&gt;

&lt;p&gt;However, this can be a tradeoff. Make it too easy to skip, and some users will. Make it too hard, and users might get irritated and abandon the product before completing the onboarding.&lt;/p&gt;

&lt;h3 id=&quot;entice-them&quot;&gt;Entice them&lt;/h3&gt;

&lt;p&gt;Someone commented on the previous blog post: if you put all this work into making the placeholder avatars not only beautiful, but uniquely identifying, then won’t users be discouraged from uploading a photo? Yes, but that’s assuming the user sees their beautiful, uniquely identifying avatar.&lt;/p&gt;

&lt;p&gt;Both Dropbox and Gmail cleverly show a non-identifying placeholder to the user, and another to other the user’s connections.&lt;/p&gt;

&lt;div style=&quot;background: #f6f9fc;&quot;&gt;
	&lt;img src=&quot;/assets/images/blog/placeholder-avatars/dropbox.png&quot; width=&quot;320&quot; /&gt;
&lt;/div&gt;
&lt;figcaption&gt;Dropbox shows these placeholder avatars to the user's connections.&lt;/figcaption&gt;

&lt;div style=&quot;background: #f6f8f8;&quot;&gt;
	&lt;img src=&quot;/assets/images/blog/encouraging-upload/faceholder.gif&quot; width=&quot;298&quot; /&gt;
&lt;/div&gt;
&lt;figcaption&gt;Dropbox shows this placeholder avatar, or 'Faceholder', to the user. &lt;a href=&quot;https://dribbble.com/shots/1972358-Faceholder&quot; target=&quot;_blank&quot;&gt;Sourced from Dribbble&lt;/a&gt;.&lt;/figcaption&gt;

&lt;p&gt;Daniel Eden of Dropbox said:&lt;/p&gt;

&lt;div class=&quot;m-post-quote margin--none&quot;&gt;
	&lt;p&gt;We ran an experiment to see what would encourage the most profile picture uploads - this character, or the user’s initials in a circle…the faceholder character significantly outperformed the initials.&lt;/p&gt;

	&lt;p class=&quot;margin--sm&quot;&gt;The character lends itself a few things:&lt;/p&gt;

	&lt;ul&gt;
		&lt;li&gt;It’s super cute, so people want to interact with it&lt;/li&gt;
		&lt;li&gt;Unlike the initials, it’s clearly not a representation of the user’s true identity&lt;/li&gt;
		&lt;li&gt;It looks like a placeholder. The dotted border just screams “change me!”&lt;/li&gt;
	&lt;/ul&gt;
&lt;/div&gt;

&lt;h3 id=&quot;gravatar&quot;&gt;Gravatar&lt;/h3&gt;

&lt;p&gt;Gravatar is interesting - and according to &lt;a href=&quot;http://useronboard.com/&quot;&gt;UserOnboard&lt;/a&gt;’s Samuel Hulick, &lt;em&gt;“painfully underused”&lt;/em&gt;. Gravatar is a Globally Recognised Avatar - if a user has an account on Gravatar, and you have their email address, then you also have access to a display photo without the user needing to do anything within your product.&lt;/p&gt;

&lt;p&gt;Many blog platforms use Gravatar to import a display photo with no effort from the user. However, this requires the user to have a Gravatar account already, and depending on who your product is aimed at, this could be only a fraction of your user base.&lt;/p&gt;

&lt;h3 id=&quot;all-of-the-above&quot;&gt;All of the above&lt;/h3&gt;

&lt;p&gt;None of these solutions are necessarily standalone - you could potentially implement all of them. Which ones work best for your design is ultimately your decision. The aim of this blog is not to tell you how to solve your design problems, but to give you a few tried-and-tested options to start with, and for you to take it from there.&lt;/p&gt;

</description>
        <pubDate>Mon, 07 Sep 2015 00:00:00 +0300</pubDate>
        <link>http://morgancarter.com.au/design-solutions/encouraging-users</link>
        <guid isPermaLink="true">http://morgancarter.com.au/design-solutions/encouraging-users</guid>
        
        
        <category>design-solutions</category>
        
      </item>
    
      <item>
        <title>Placeholder Avatars</title>
        <description>&lt;p&gt;One problem that pops up in almost any product that has user login is that of avatars. Your design mocks look great with smiling photos of Robert Downey Jr. and Scarlett Johansson, but the reality is that not only will most display photos be of poorer quality, but the majority of your users probably won’t upload one at all.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/placeholder-avatars/before-after.png&quot; alt=&quot;Before and After&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;With and without user-uploaded display photos. &lt;a href=&quot;https://dribbble.com/shots/1818748-Appon-Chat-Widget&quot; target=&quot;_blank&quot;&gt;Original by Olia Gozha&lt;/a&gt;.&lt;/figcaption&gt;

&lt;p&gt;So we have two problems here, the first is that of placeholder avatars - what does your design look like if no-one has uploaded any display photos? The second is that of encouraging users to upload a display photo, which I’ll cover in my next post.&lt;/p&gt;

&lt;h3 id=&quot;generic-faces&quot;&gt;Generic Faces&lt;/h3&gt;
&lt;p&gt;Facebook solves this problem by using a generic silhouette as a placeholder avatar, displaying either a male or female version depending on how you’ve set your gender.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/placeholder-avatars/silhouettes.png&quot; alt=&quot;Generic Silhouettes&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;Facebook's placeholder avatars.&lt;/figcaption&gt;

&lt;p&gt;I don’t think this is a great solution for a number of reasons.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;If you have two users of the same sex, their placeholder avatars look identical. Again, if we assume that only a minority of your users actually upload a photo, your design now becomes a lot more homogenous and confusing.&lt;/li&gt;
  &lt;li&gt;If you weren’t already asking the user to set the gender, now that’s another option you need them to set. And if you make this setting optional, then what is the default gender? Male? Female? Androgynous alien?&lt;/li&gt;
  &lt;li&gt;Many products (eg. OKCupid), have a less binary approach to gender that makes this solution even more complicated.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;However, Facebook gets away with it because &lt;strong&gt;everyone&lt;/strong&gt; uploads a display photo, so this placeholder rarely shows.&lt;/p&gt;

&lt;h3 id=&quot;fun-artwork&quot;&gt;Fun Artwork&lt;/h3&gt;
&lt;p&gt;This approach is used by Twitter, Slack, Tumblr and I’m sure many more. It has a great benefit of reinforcing branding. Slack, for example, uses variations of their logo. Looking at a design in which no-one has uploaded a display photo, instead of looking like homogeneous and confusing like in Facebook’s solution, it now looks finished, inviting, and on-brand.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/placeholder-avatars/slack.png&quot; alt=&quot;Slack Before and After&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;Slack without any user-uploaded display photos still looks pretty good. &lt;a href=&quot;https://slack.com/is/team-communication&quot; target=&quot;_blank&quot;&gt;Original by Slack&lt;/a&gt;.&lt;/figcaption&gt;

&lt;p&gt;This approach can be great if each placeholder were unique. However, in Slack’s approach, each placeholder avatar looks like a subtle variation of the last. It’s difficult to recognise someone by their placeholder, although it does provide some recognition when placed alongside a few user-uploaded display photos.&lt;/p&gt;

&lt;h3 id=&quot;initials&quot;&gt;Initials&lt;/h3&gt;
&lt;p&gt;Gmail, Dropbox and Apple take a third (and my personal favourite) approach - using the user’s initials for the avatar. Some use both first and last name (Apple), others use just the first (Gmail).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/blog/placeholder-avatars/apple.jpg&quot; width=&quot;320&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;iOS's placeholder avatars.&lt;/figcaption&gt;

&lt;p&gt;Gmail and Dropbox go further, adding a unique colour to each user. Jerry Primrose is a red JP, and Jeremiah Philip is a green JP. This provides a recognisable avatar in isolation, as well as in context. Note that this solution may present problems in non-English countries where people don’t always have exactly 2 initials.&lt;/p&gt;

&lt;div style=&quot;background: #f6f9fc;&quot;&gt;
	&lt;img src=&quot;/assets/images/blog/placeholder-avatars/dropbox.png&quot; width=&quot;320&quot; /&gt;
&lt;/div&gt;
&lt;figcaption&gt;Dropbox's placeholder avatars.&lt;/figcaption&gt;

&lt;p&gt;So how do we do it? You don’t want to pick any random colour out of the 16,777,216 possible variations because they’ll probably look terrible. So we just pick a few that fit the design, no more than 10.&lt;/p&gt;

&lt;p&gt;Next, we need to assign each user a colour. This can’t be randomly done upon render, because Jerry Primrose must always be a red JP. The solution is no good if you refresh the page and he’s turned green.&lt;/p&gt;

&lt;p&gt;We can solve this problem using hash codes. This lets us avoid creating another database entry for each user, by calculating it on render, but having the same colour each time. Simply hash the full name, do a modulus by x (where x is the number of colours you picked), and then assign that person the colour at the resulting index.&lt;/p&gt;

&lt;p&gt;Try playing around with the example below, then check out the code to see how it’s done.&lt;/p&gt;

&lt;p data-height=&quot;268&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;QbdQwY&quot; data-default-tab=&quot;result&quot; data-user=&quot;morgoe&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/morgoe/pen/QbdQwY/&quot;&gt;Placeholder Avatars&lt;/a&gt; by Morgan Carter (&lt;a href=&quot;http://codepen.io/morgoe&quot;&gt;@morgoe&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;My next post will detail how to encourage people to upload an avatar.&lt;/p&gt;

&lt;!-- Next, learn how to [encourage users to upload an avatar](/design-solutions/encouraging-upload/). --&gt;

</description>
        <pubDate>Mon, 24 Aug 2015 00:00:00 +0300</pubDate>
        <link>http://morgancarter.com.au/design-solutions/placeholder-avatars</link>
        <guid isPermaLink="true">http://morgancarter.com.au/design-solutions/placeholder-avatars</guid>
        
        
        <category>design-solutions</category>
        
      </item>
    
      <item>
        <title>Deputy 3</title>
        <description>&lt;p&gt;Deputy is a workhorse application for any company that needs scheduled shifts for its employees. It supports scheduling, timesheets, workplace communication, and integrates with supporting software like Xero, Vend and Shopify. Deputy works with a desktop web application, an iPad app, an iPhone app and an Android app, all handling the same data in various ways, for various use cases (the mobile apps are primarily for employees, whereas the desktop app is primarily for employers).&lt;/p&gt;

&lt;p&gt;When I joined Deputy, the product had been in development for just over 6 years. They’d gone through two major iterations of the software. The first version was fairly well-designed, but was overly complex and used dated design patterns. The second version simplified the UI significantly, but it had no conventions or consistency. This led to a lot of cognitive effort trying to understand each screen, as it had no relationship to the others.&lt;/p&gt;

&lt;h3 id=&quot;project-goals&quot;&gt;Project goals&lt;/h3&gt;

&lt;p&gt;My task was to lead the third iteration of the software - Deputy 3. This iteration had a few major goals:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It needed to support all features of both Deputy 1 and 2, while at the same time simplifying the UI&lt;/li&gt;
  &lt;li&gt;It had to unify the design and product development of the desktop, tablet and mobile apps that had drifted apart over the years&lt;/li&gt;
  &lt;li&gt;It had to work on any device (previous iterations were fixed-width, desktop-only apps)&lt;/li&gt;
  &lt;li&gt;We needed to update from Bootstrap 2 to 3, which meant rewriting the CSS codebase from scratch&lt;/li&gt;
  &lt;li&gt;It had to be more fun, inviting, and intuitive.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On top of all of this, we were also implementing new features. We planned to expand the functionality of the News Feed, adding comments and attachments; this would be rolled out simultaneously with updates to the mobile and tablet apps. We also added an easy way for employees to view past timesheets, upcoming shifts, see who they’d be working with, and claim open shifts.&lt;/p&gt;

&lt;p&gt;And we only had 6 months.&lt;/p&gt;

&lt;h3 id=&quot;getting-to-work&quot;&gt;Getting to work&lt;/h3&gt;

&lt;p&gt;One of the benefits of working with start-ups is that there’s always someone new joining. I like to take these new employees and test the product with them while they’re still fresh-faced.&lt;/p&gt;

&lt;p&gt;This user testing allowed me to focus my efforts on the aspects of the product most people found confusing. With tens of thousands of people using Deputy, I didn’t want to fix what wasn’t broken. The response we’ve received from the majority of users indicates we were successful here.&lt;/p&gt;

&lt;p&gt;Once we had some direction, I started work on all three aspects of the project - code, user interface, and visual style. I like to alternate my focus. It’s useful to remove the restrictions of a developer mindset and focus purely on the design. I don’t usually bother with prototyping applications, as I can code up a functional prototype quickly, and once it’s in the browser it’s much quicker to edit data and design details.&lt;/p&gt;

&lt;h3 id=&quot;challenges&quot;&gt;Challenges&lt;/h3&gt;

&lt;p&gt;The project really challenged my ability to design on a micro and macro level simultaneously. One moment I would be organising the information architecture, fitting each of the features where it made the most sense, and the next I would be &lt;a href=&quot;https://viget.com/inspire/testing-accordion-menu-designs-iconography&quot;&gt;researching&lt;/a&gt; and testing how best to provide affordance for a particular button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/work/deputy/information-architecture.jpg&quot; alt=&quot;Macro Design&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;Macro design - card sorting helped us place each feature in its ideal place within the navigational structure.&lt;/figcaption&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/work/deputy/buttons.png&quot; alt=&quot;Micro Design&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;Micro design - the iteration of accordion buttons.&lt;/figcaption&gt;

&lt;p&gt;One problem we ran into again and again was the lack of time. A few really interesting ideas ended up being pushed out, but might get revisited later on. One idea that got cut was an ‘inline modal’. We needed a way to place a modal over a modal over a page, so I came up with the solution of making the first modal inline, not overlaid. Below is a messy prototype, but it demonstrates the solution pretty well.&lt;/p&gt;

&lt;video width=&quot;768&quot; height=&quot;384&quot; autoplay=&quot;&quot; loop=&quot;&quot; poster=&quot;/assets/images/work/deputy/inline-modal.jpg&quot;&gt;
	&lt;source src=&quot;/assets/images/work/deputy/inline-modal.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;figcaption&gt;Inline modal inspired by Material Design's use of animation.&lt;/figcaption&gt;

&lt;p&gt;Another major issue was that we were trying to bring the desktop visually in line with the mobile apps, but many design decisions simply didn’t translate from mobile to desktop. We started by questioning some of the assumptions that had been made previously, and we ended up overhauling some key aspects of the mobile apps and meeting the designs in the middle.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/work/deputy/transition.png&quot; alt=&quot;Transition from Deputy2 to Deputy3&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;Unifying the desktop and mobile apps.&lt;/figcaption&gt;

&lt;!-- One issue with the previous versions is that some forms were really long (Shift scheduling is a really complex beast to tackle, especially once you take into account differences between countries). The 2nd most popular device for Deputy users was the 1366x768px Dell laptops. This meant that for many users, the **Save** and **Cancel** buttons were out of sight (and out of mind). We solved this with an elegant solution I’ve written about in my blog - check it out. --&gt;

&lt;h3 id=&quot;results&quot;&gt;Results&lt;/h3&gt;

&lt;p&gt;In the end we finished coding right on the 6 month mark, and after a few weeks of QA, we launched in June. I was expecting a substantial amount of push-back, as it was a massive redesign (and I’ve seen how Reddit &lt;a href=&quot;https://www.reddit.com/r/changelog/comments/2tw6pm/reddit_change_changes_to_default_text_styling/&quot;&gt;reacted&lt;/a&gt; when the design team increased the font size by 1px), but the response to the new version has been really positive. Deputy has already doubled its users (from 40,000 to 80,000) in the first half of this year. With this new release, and a few other key strategies, they’re estimating to end the year at 400,000 users.&lt;/p&gt;

&lt;blockquote&gt;“I just wanted to say how much I love the new-look Deputy web client. You guys have obviously spent a lot of time thinking about the design of the app and it shows. Well done!” &lt;strong class=&quot;u-pullRight&quot;&gt;–Jason Tait, a Deputy customer&lt;/strong&gt;&lt;/blockquote&gt;

&lt;p&gt;Of course, this is just the beginning. Shipping a new version or feature will always bring really valuable feedback, and constant iteration is the key. I’m looking really forward to seeing how Deputy continues to develop.&lt;/p&gt;

</description>
        <pubDate>Sat, 17 Jan 2015 00:00:00 +0200</pubDate>
        <link>http://morgancarter.com.au/work/deputy-3</link>
        <guid isPermaLink="true">http://morgancarter.com.au/work/deputy-3</guid>
        
        
        <category>work</category>
        
      </item>
    
      <item>
        <title>Stackla Widgets</title>
        <description>&lt;p&gt;When I joined Stackla, they already had a Widget system in place that would allow clients to embed the product into their websites. The Widgets had a lot of clever code behind it to make it super fast, bandwidth-efficient, and live-updating. They were also used for any live event displays we did at that time. However, the Widgets had a number of issues:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;They were simple, static iFrames with fixed width and height. Responsive websites were becoming more and more popular around that time, and the widgets were totally unusable for those clients.&lt;/li&gt;
  &lt;li&gt;They were pretty unattractive. Stackla didn’t have an internal designer until I joined, and a lot of the visuals had been rushed to get the MVP out.&lt;/li&gt;
  &lt;li&gt;They were extremely difficult to customise. Stackla sold itself as a white label product, but the Widgets were so rigid, that they ended up looking almost identical for each client.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;“Morgan is not afraid to voice his opinion and constructively challenge ideas. He acts proactively and takes the initiative on tasks, which has resulted in great products for Stackla and very happy clients.” &lt;strong class=&quot;u-pullRight&quot;&gt;–Peter Cassidy, Co-founder of &lt;a href=&quot;https://stackla.com/&quot; target=&quot;_blank&quot;&gt;Stackla&lt;/a&gt;&lt;/strong&gt;&lt;/blockquote&gt;

&lt;p&gt;I did a bit of work to improve the existing product, but it wasn’t until late 2013 that we made a true leap in quality. I was building the site of &lt;a href=&quot;http://asntm2.starworldasia.tv/&quot; target=&quot;_blank&quot;&gt;Asia’s Next Top Model&lt;/a&gt;, and the client had almost no content of their own - the show hadn’t even started. However, there was a lot of hype on social media, so we decided to use a Widget to embed fan content into the site. Since the site was to be responsive, I pitched the idea of a Fluid Widget, one that would adapt to any screen size. There was a bit of hesitancy about how much work this might be, and some discussions over alternatives (such as using a number of static Widgets in an adaptive design scheme). I created a prototype over a couple of days that ended up serving as the basis for the Fluid Widget as we developed it. The client was extremely happy - a barebones site was turned into a really content-heavy site, and social engagement was massively increased. The Fluid Widget became Stackla’s best selling feature for the rest of my time working there.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/work/stackla-widgets/asntm.jpg&quot; alt=&quot;Asia's Next Top Model Fluid Widgets&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;The first iteration of the Fluid Widget.&lt;/figcaption&gt;

&lt;p&gt;As demand for the Fluid Widget grew, we further expanded its functionality. We made it more and more customisable, and refactored the code to be nearly identical across Stackla’s offerings, so that one could literally copy and paste customisations from one display to another. By the end of my time there, we’d made the Fluid Widget so customisable that some client designs were unrecognisably different from the original iteration.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/work/stackla-widgets/wanted.png&quot; alt=&quot;Wanted Shoes Fluid Widget&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;&lt;a href=&quot;https://stackla.com/case-studies/wanted-shoes/&quot; target=&quot;_blank&quot;&gt;Wanted Shoes&lt;/a&gt; used the Fluid Widget as a Social eCommerce platform.&lt;/figcaption&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/work/stackla-widgets/myer.jpg&quot; alt=&quot;Myer Fluid Widgets&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;&lt;a href=&quot;https://stackla.com/case-studies/myer-spring-summer-launch/&quot; target=&quot;_blank&quot;&gt;Myer&lt;/a&gt; used the Fluid Widgets to accompany a live streaming fashion show.&lt;/figcaption&gt;

&lt;!--&lt;div class=&quot;u-responsiveMedia&quot;&gt;
	&lt;iframe src=&quot;https://fast.wistia.net/embed/iframe/tcxgctbuu4?videoFoam=true&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;figcaption&gt;&lt;a href=&quot;https://stackla.com/case-studies/sportsbet-tweet-powered-horse/&quot; target=&quot;_blank&quot;&gt;Sportsbet&lt;/a&gt; used the Fluid Widget to create a data visualisation of a Tweet Powered Horse&lt;/figcaption&gt;--&gt;

</description>
        <pubDate>Fri, 16 Jan 2015 00:00:00 +0200</pubDate>
        <link>http://morgancarter.com.au/work/stackla-widgets</link>
        <guid isPermaLink="true">http://morgancarter.com.au/work/stackla-widgets</guid>
        
        
        <category>work</category>
        
      </item>
    
      <item>
        <title>Stackla Admin</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/images/work/stackla-admin/manage.png&quot; alt=&quot;Stackla Admin Manage Content Screen&quot; /&gt;&lt;/p&gt;
&lt;figcaption&gt;The first iteration of the Fluid Widget.&lt;/figcaption&gt;

&lt;p&gt;When I joined Stackla, they already had a Widget system in place that would allow clients to embed the product into their websites. The Widgets had a lot of clever code behind it to make it super fast, bandwidth-efficient, and live-updating. They were also used for any live event displays we did at that time. However, the Widgets had a number of issues:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;They were simple, static iFrames with fixed width and height. Responsive websites were becoming more and more popular around that time, and the widgets were totally unusable for those clients.&lt;/li&gt;
  &lt;li&gt;They were pretty unattractive. Stackla didn’t have an internal designer until I joined, and a lot of the visuals had been rushed to get the MVP out.&lt;/li&gt;
  &lt;li&gt;They were extremely difficult to customise. Stackla sold itself as a white label product, but the Widgets were so rigid, that they ended up looking almost identical for each client.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;“Morgan is not afraid to voice his opinion and constructively challenge ideas, and is more than willing to jump in and master new technologies when the job calls for it.” &lt;strong class=&quot;u-pullRight&quot;&gt;-Peter Cassidy, Co-founder of &lt;a href=&quot;https://stackla.com/&quot; target=&quot;_blank&quot;&gt;Stackla&lt;/a&gt;&lt;/strong&gt;&lt;/blockquote&gt;
&lt;p&gt;I did a bit of work to improve the existing product, but it wasn’t until late 2013 that we made a true leap in quality. I was building the site of &lt;a href=&quot;http://asntm2.starworldasia.tv/&quot; target=&quot;_blank&quot;&gt;Asia’s Next Top Model&lt;/a&gt;, and the client had almost no content of their own - the show hadn’t even started. However, there was a lot of hype on social media, so we decided to use a Widget to embed fan content into the site. Since the site was to be responsive, I pitched the idea of a Fluid Widget, one that would adapt to any screen size. There was a bit of hesitancy about how much work this might be, and some discussions over alternatives (such as using a number of static Widgets in an adaptive design scheme). I created a prototype over a couple of days that ended up serving as the basis for the Fluid Widget as we developed it. The client was extremely happy - a barebones site was turned into a really content-heavy site, and social engagement was massively increased. The Fluid Widget became Stackla’s best selling feature for the rest of my time working there.&lt;/p&gt;

&lt;p&gt;As demand for the Fluid Widget grew, we further expanded its functionality. We made it more and more customisable, and refactored the code to be nearly identical across Stackla’s offerings, so that one could literally copy and paste customisations from one display to another. By the end of my time there, we’d made the Fluid Widget so customisable that some client designs were unrecognisably different from the original iteration.&lt;/p&gt;

&lt;p&gt;![Myer Fluid Widgets][wanted]&lt;/p&gt;
&lt;figcaption&gt;&lt;a href=&quot;https://stackla.com/case-studies/wanted-shoes/&quot; target=&quot;_blank&quot;&gt;Wanted Shoes&lt;/a&gt; used the Fluid Widget as a Social eCommerce platform.&lt;/figcaption&gt;

&lt;div class=&quot;u-responsiveMedia&quot;&gt;
	&lt;iframe src=&quot;https://fast.wistia.net/embed/iframe/tcxgctbuu4?videoFoam=true&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;figcaption&gt;&lt;a href=&quot;https://stackla.com/case-studies/sportsbet-tweet-powered-horse/&quot; target=&quot;_blank&quot;&gt;Sportsbet&lt;/a&gt; used the Fluid Widget to create a data visualisation of a Tweet Powered Horse&lt;/figcaption&gt;

</description>
        <pubDate>Wed, 14 Jan 2015 00:00:00 +0200</pubDate>
        <link>http://morgancarter.com.au/work/stackla-admin</link>
        <guid isPermaLink="true">http://morgancarter.com.au/work/stackla-admin</guid>
        
        
        <category>work</category>
        
      </item>
    
      <item>
        <title>True Skate</title>
        <description>
</description>
        <pubDate>Tue, 13 Jan 2015 00:00:00 +0200</pubDate>
        <link>http://morgancarter.com.au/work/true-skate</link>
        <guid isPermaLink="true">http://morgancarter.com.au/work/true-skate</guid>
        
        
        <category>work</category>
        
      </item>
    
      <item>
        <title>Manchester United</title>
        <description>
</description>
        <pubDate>Mon, 12 Jan 2015 00:00:00 +0200</pubDate>
        <link>http://morgancarter.com.au/work/manchester-united</link>
        <guid isPermaLink="true">http://morgancarter.com.au/work/manchester-united</guid>
        
        
        <category>work</category>
        
      </item>
    
      <item>
        <title>Asia's Next Top Model</title>
        <description>
</description>
        <pubDate>Sun, 11 Jan 2015 00:00:00 +0200</pubDate>
        <link>http://morgancarter.com.au/work/asias-model</link>
        <guid isPermaLink="true">http://morgancarter.com.au/work/asias-model</guid>
        
        
        <category>work</category>
        
      </item>
    
  </channel>
</rss>
